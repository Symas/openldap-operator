# NOTES:
# ------------------------------------------------------------------------
# Read up about pre-commit hooks at https://pre-commit.com/
#
# 1. Use pipx to create an install of the pre-commit tool.
# pip install pipx
# pipx upgrade-all
# pipx install pre-commit
#
# 2. Now use pre-commit to update versions of the checks below.
# pre-commit autoupdate
#
# 3. And to run the checks locally.
# pre-commit run --all-files

fail_fast: false
default_language_version:
  python: python3.10

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-yaml
      - id: check-json
      - id: pretty-format-json
        args: ['--autofix', '--no-ensure-ascii', '--no-sort-keys']
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
        args: ['--assume-in-merge']
      - id: check-case-conflict
      - id: check-symlinks
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=auto']
      - id: no-commit-to-branch
        args: ['--branch', 'main']

  # CommonMark compliant Markdown formatter
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.16
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-black
          - black==23.1.0 # Must be the latest version of Black

  - repo: https://github.com/tekwizely/pre-commit-golang
    rev: v1.0.0-rc.1
    hooks:
    #
    # Go Build
    #
    -   id: go-build-mod
#    -   id: go-build-pkg
    -   id: go-build-repo-mod
#    -   id: go-build-repo-pkg
    #
    # Go Mod Tidy
    #
    -   id: go-mod-tidy
        args: [ '-e' ]
    -   id: go-mod-tidy-repo
        args: [ '-e' ]
    #
    # Go Test
    #
#    -   id: go-test-mod
#    -   id: go-test-pkg
#    -   id: go-test-repo-mod
#    -   id: go-test-repo-pkg
    #
    # Go Vet
    #
#    -   id: go-vet
    -   id: go-vet-mod
#    -   id: go-vet-pkg
    -   id: go-vet-repo-mod
#    -   id: go-vet-repo-pkg
    #
    # Revive
    #
    -   id: go-revive
    -   id: go-revive-mod
    -   id: go-revive-repo-mod
    #
    # GoSec
    #
#    -   id: go-sec-mod
#    -   id: go-sec-pkg
#    -   id: go-sec-repo-mod
#    -   id: go-sec-repo-pkg
    #
    # StaticCheck
    #
    -   id: go-staticcheck-mod
#    -   id: go-staticcheck-pkg
    -   id: go-staticcheck-repo-mod
#    -   id: go-staticcheck-repo-pkg
    #
    # StructSlop
    #
#    -   id: go-structslop-mod
#    -   id: go-structslop-pkg
#    -   id: go-structslop-repo-mod
#    -   id: go-structslop-repo-pkg
    #
    # Formatters
    #
    # golangci-lint run --fix --disable-all --enable gocritic,gofumpt
#    -   id: go-fmt
#    -   id: go-fmt-repo
#    -   id: go-fumpt        # replaces go-fmt
#    -   id: go-fumpt-repo   # replaces go-fmt-repo
#    -   id: go-imports      # replaces go-fmt
#    -   id: go-imports-repo # replaces go-fmt-repo
#    -   id: go-returns      # replaces go-imports & go-fmt
#    -   id: go-returns-repo # replaces go-imports-repo & go-fmt-repo
    #
    # Style Checkers
    #
#    -   id: go-lint
#    -   id: go-critic
    #
    # GolangCI-Lint
    # - Fast Multi-Linter
    # - Can be configured to replace MOST other hooks
    # - Supports repo config file for configuration
    # - https://github.com/golangci/golangci-lint
    #
#    -   id: golangci-lint
#    -   id: golangci-lint-mod
#    -   id: golangci-lint-pkg
#    -   id: golangci-lint-repo-mod
#    -   id: golangci-lint-repo-pkg
